"""
Django settings for gigoogigeul project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# 원래 비밀번호 찾기를 할 때 인증 메일을 받기 위해 시크릿키를 따로 빼려고 했으나 보안문제가 생겨서 포기하고,
# secret_key는 json으로 빼서 주석처리함 = 건들지 않았다
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-gm()=a%f2*pg*j4a*xlxvpl=shd8p#1z-df)drpp(^admt6w!a')





# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get('DJANGO_DEBUG', True)) 
# 이 부분이 quiz.html 에러나서 일단 수정
#DEBUG = False

ALLOWED_HOSTS = ['*']
#ALLOWED_HOSTS = ['127.0.0.1', 'localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sites', # 소셜
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'quizapp',
    'challengeapp',
    'userapp',
    'shopapp',

    #소셜로그인 (위에 sites도 있어요)
    'allauth',
    'allauth.account',
    'allauth.socialaccount', 
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.naver',
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gigoogigeul.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gigoogigeul.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'main', 'static'),
)
STATIC_ROOT = os.path.join(BASE_DIR, 'static')


# 회원가입 및 챌린지 사진을 위해 media 사용했읍니다..
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 로그아웃하면 main으로 
LOGOUT_REDIRECT_URL = 'main'

AUTH_USER_MODEL = 'main.CustomUser'

# 회원가입할 때 자동으로 가입 날짜가 저장되는데 이걸 한국 시간으로 바꿔줌 (use_tz도 같은 맥락)
TIME_ZONE = 'Asia/Seoul'
USE_TZ = False



# 소셜 로그인 (178까지)
# 처음에 소셜 로그인을 하게되면 알아서 CustomUser에 맞춰지는 걸로 알고 있고, 
# 지구지글에서 가입한 다른 계정처럼 mypage에서 회원정보 수정 가능(여기서 프사도 넣고, 비밀번호도 설정하고 다 할 수 있음) 
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

SITE_ID = 1
LOGIN_REDIRECT_URL = '/' # 소셜로그인 성공시 보여지는 링크 - 우선 main

import dj_database_url
db_from_env = dj_database_url.config(conn_max_age = 500)
DATABASES['default'].update(db_from_env)


# --------------------------------------------- pip 목록 ------------------------------------------------------
# pip install django-allauth
# pip install Pillow
# 이 파일에 필요한 자세한 pip 목록은 requirements.txt에서 확인할 수 있음
# -------------------------------------------------------------------------------------------------------------